2020년 10월 28일

어제 배웠던 것
do-while
do = 일단 한번은 먼저 실행시켜라

for문
조건이 참인동안에 반복시켜주는
괄호안에 세개의 식을 넣어줄 수 있다.
초기식, 조건식, 증감식
세미콜론으로 구분한다

이중 반복문
밖에 있는 반복문 & 내부 반복문
내부 반복문 실행문 실행횟수는 외부x내부
 
별찍기 예제 커밋하기 


		System.out.println("## 별찍기 3##");
		
		
		for (int j=1; j<=5; j++ ) {
			for(int s=4 ; s>=j ;s--) {
			System.out.print("    ");
			}
			for (int i=0; i<j; i++ ) {
		System.out.print("☆");
		} System.out.println();
		}

		

		System.out.println("## 별찍기3 ##");
		String star;
		for(int j=0; j<5; j++) {
			star = "";
			for(int i=0; i<=j ; i++) {
				star += "*";
				
			} System.out.printf("%5s\n", star);
		}
		
		
		// if문 써서 별찍기 3
		
		for(int i=1; i<6; i++) {
			for(int j=5; j>0; j--) {
				if(i<j) {
					System.out.print("    ");
				} else {
					System.out.print("☆");
				}
			System.out.println("" );
		}
		
		

		
		System.out.println("## 별찍기4 ##");
		
		for(int i=1; i<6; i++) {
			for(int j=1; j<i; j++) {
				System.out.print("    ");
			} for(int s=5; s>=i; s--) {
				System.out.print("☆");
			} System.out.println();
		}
		

--------------------------------------------------------------------------------
12. 참조 자료형(Reference Type)
 - 데이터가 저장되어 있는 공간의 주소를 저장하는 자료형
 - 기본형을 제외한 모든 자료형
 - 주소를 저장하기위해 데이터 저장크기는 4Byte를 사용
 - 자료형 구분
	저장되는 값에 따라 기본자료형과 참조자료형으로 구분됨
	기본자료형 : 정수, 실수, 문자, 논리 리터럴
	참조자료형 : 배열, 열거, 클래스, 인터페이스
 - 기본자료형 변수는 메모리 Stack 영역에 만들어짐
 - 참조자료형 변수는 Stack영역에, 실제 데이터는 Heap 영역에 저장됨


13. 배열

- 같은 자료형의 변수를 하나의 묶음으로 다루는 것
- 배열의 각 변수공간에 접근하기 위해 순서번호(인덱스)를 사용
- 인덱스 번호는 0부터 시작됨

-배열선언
	배열공간의 주소 저장용 참조(Refenece) 변수를 만드는 것
	
	배열은 참조형 자료이기 때문에 내가 "정수형태 자료 저장할 공간 만들거예요"하면
	그 공간을 만드는 것이 아니라 그 공간을 저장할 주소 참조변수를 만드는 것

- 배열 선언 방법
자료형[] 배열명;
자료형 배열명[];

	배열 선언 예시
	int[] arr; 정수형태 배열을 저장할 공간주소를 만드는 것
	int arr[];

int[] arr = new int[5]
4byte짜리 정수형태 공간 5개를 만들겠다.
4x5해서 20byte인 전체 이름은 arr 임



- 배열 생성
	실제 데이터가 저장될 배열 공간을 만드는 것
	배열 공간 할당
 	자료형[] 배열명 = new 자료형[배열크기];
	자료형 배열명[] = new 자료형[배열크기];

배열 공간 할당 예시
int[] arr = new int[5];   정수형태 공간 5개를 만들어서 arr이라는 주소에 담을 것임
int arr = new int[5];

new  = Heap 영역에 주소 만들어 주세요

- 배열 초기화
인덱스를 이용한 초기화


배열 사용 예시 1:
	int[] arr = new int[5];
	arr[0] = 10;
	arr[1] = 20;
	arr[2] = 30;
	arr[3] = 40;
	arr[4] = 50;
	System.out.println(arr[0]);
	System.out.println(arr[1]);
	System.out.println(arr[2]);
	System.out.println(arr[3]);
	System.out.println(arr[4]);
배열 사용 예시 2:	반복문 활용
	int[] arr = new int[5];
	for(int i=0; i<5; i++){
		arr[i] = (i+1)*10;
	}
	for(int i=0; i<5; i++) {
		System.out.println(arr[i]);
-. 5개의 수를 입력 받아 합을 구하는 프로그램 만들기(배열 이용)
	Scanner scan = new Scanner(System.in);
	int[] arr = new int[5];
	int sum = 0;
	for(int i=0; i<arr.length; i++){
		System.out.print((i+1)+"번째 수 입력 : ");
		arr[i] = scan.nextInt();
		sum += arr[i];
	}
	for(int i=0; i<arr.length; i++) {
		System.out.print(arr[i]);
		if(i != arr.length-1) {
			System.out.print(" + ");
		}
	}
	System.out.println(" = "+sum);


배열공간을 선언, 할당할때 대괄호 안에 쓰는 번호 = 개수
인덱스 안에 쓰는 번호 = 시작주소에서 부터 몇번째에 떨어져있는지

선언과 동시에 초기화
int[] arr1 = {10, 20, 30, 40, 50}; (이렇게 통째로 초기화 하는건 한번만 할 수 있다.)
arr[0] = 15; 로는 바꿀 수 있다.
int[] arr2 = new int[] {10, 20, 30, 40, 50};
String fruit[] = {"사과", "포도", "참외"};

- 난수(Random값 사용) 
	Math.random()
	// 실수형태의 랜덤값 추출(0.0<=랜덤값<1.0)
	// (형변환)(Math.random()*갯수+시작수)
	System.out.println(Math.random());	
	System.out.println((int)(Math.random()*45+1));
 - 출력 시 숫자 앞에 0 채우기
	System.out.printf("%02d", 5);	//출력결과 : 05
