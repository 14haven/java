2020년 10월 27일

어제 배웠던 것 복습
제어문
	조건문
	- if문
	- switch문



-------------------------------------------------------------------

반복문 (while문, do-while문, for문)

 - While문
	조건이 참인 동안 블록 안의 내용을 반복 실행 == 조건이 거짓이 될 동안 블록 안의 내용을 반복 실행
	원하는 횟수만 반복하고 싶은 경우 변수를 사용하여 변수의 값이 반복문을 진행하는 동안 계속 변하도록 만든 후 일정 시점에 거짓이 되도록 조건을 만들어 줘야 함

	초기식, 조건식, 증감식을 넣어줘야 한다.
	조건식이 계속 true이면 무한루프
	조건이 참인 동안에 안에 있는 내용을 반복시켜주겠다.


	초기식 : 반복문에서 사용할 변수의 값을 초기화
	조건식 : 반복문을 실행할 조건(true면 반복문 실행, false면 반복문 종료)
	증감식 : 반복문이 진행되는 동안 변수의 값이 계속 변하도록 만들어 줌


	while문 사용법
		[초기식;]
		while(조건식) {
			수행될 문장;
			[증감식 or 분기문];
		}
	while문 예시
		int i = 1;
		while(i <= 10) {
		     System.out.println(i + " 출력");
		     i++;
		}

	조건식이 true일 때 문장 수행
	문장 수행이 끝나면 조선식 다시 확인 후 true면 수행,
	조건식이 false가 될 때까지 수행
	조건식이 false가 되면 반복문 종료
	* {} 안에 조건을 벗어나게 할 연산(증감식, 분기문) 필요

	 -. 수를 입력 받아서 입력 받은 수 만큼 출력
		Scanner scan = new Scanner(System.in);
		System.out.print("반복할 횟수 : ");
		int count = scan.nextInt();
		int i = 1;    //초기식
		while(i <= count) {    //조건식
			System.out.println(i+"번째 반복");
			i++;    //증감식
		}
	 -. 수를 입력 받아 0부터 입력 받은 수까지의 합 구하기
		## 방법 1 ##
		Scanner scan = new Scanner(System.in);
		System.out.print("정수 입력 : ");
		int count = scan.nextInt();
		int i = 0;    //초기식
		int sum = 0;
		while(i <= count) {    //조건식
			sum += i;
			i++;    //증감식
		}
		System.out.println("합계 : "+sum);
		
		## 방법 2 ##
		Scanner scan = new Scanner(System.in);
		System.out.print("정수 입력 : ");
		int count = scan.nextInt();    //초기식
		int sum = 0;
		while(count >= 0) {    //조건식
			sum += count;
			count--;    //증감식
		}
		System.out.println("합계 : "+sum);
		
	 -. 수를 입력 받아 0부터 입력 받은 수까지의 짝수들 합 구하기
		## 방법 1 ##
		Scanner scan = new Scanner(System.in);
		System.out.print("정수 입력 : ");
		int count = scan.nextInt();
		int i = 0;    //초기식
		int sum = 0;
		while(i <= count) {    //조건식
			if(i % 2 == 0) {
			sum += i;
			}
			i++;    //증감식
		}
		System.out.println("합계 : "+sum);
		
		## 방법 2 ##
		Scanner scan = new Scanner(System.in);
		System.out.print("정수 입력 : ");
		int count = scan.nextInt();    //초기식
		int sum = 0;
		while(count >= 0) {    //조건식
			if(count % 2 == 0) {
			sum += count;
			}
			count--;    //증감식
		}
		System.out.println("합계 : "+sum);
		
	 -. 구구단 출력하기(입력 받은 단 하나)
		Scanner scan = new Scanner(System.in);
		System.out.print("몇 단을 출력하시겠습니까? ");
		int dan = scan.nextInt();
		int i = 1;
		while(i <= 9){
			//System.out.println(dan+" × "+i+" = "+(dan*i) );
			System.out.printf("%d × %d = %d \n", dan, i, dan*i);
			i++;
		}


- do-while문

	While문과 같으나, 조건을 보기 전에 블록 안의 내용을 먼저 한번 실행 한 후 조건을 보고 반복실행 할지 여부를 결정
	
	무조건 일단 실행 (조건 필요 없이 한번은 일단 실행)
	do 안의 내용 먼저 실행
	조건식 확인 후 ture면 문장 수행, false면 종료

	do-while문 사용법
	변수 초기화
	do {
		수행될 문장;
		[증감식 or 분기문;]
	} while(조건식);  (꼭 마지막에 세미콜론 붙여줘야 한다)
	
	do-while문 예시
		int i = 1;
		do {
			System.out.println(i + "출력");
			i++;
		} while(i <= 10);


- for 문
	for(초기식; 조건식; 증감식) {
		수행될 문장;
	}
	while문과 같은 반복문이지만 괄호( ) 안에 초기식,조건식,증감식이 모두 들어감
	For문에서 사용할 변수는 되도록 정수타입으로 설정하는 것이 좋음(실수는 정확하지 않음)
	초기식과 조건식, 증감식은 필요 없는 경우나, 다른 곳에서 이미 선언한 경우 생략 가능
	초기식과 증감식은 둘 이상 사용가능하며 쉼표(,)로 구분하면 됨
	조건은 무조건 결과가 하나로 나와야 함(true 또는 false)

	for문 예시
	for(int i=1; i<=10; i++) {
		System.out.println(i+"출력");
	}
		
		
	for(int i=1; i<=10; i++) {
		System.out.println(i + "출력");
	}
		
		
	int i=1; //초기값 생략 가능
	for( ;i<=10;i++) {
		System.out.println(i+" 출력");
	}
		
		
	int i=1;
	for( ;i<=10; ) { //증감식 생략 가능
		System.out.println(i+" 출력");
		i++;
	}
		
		
	int i=1;
	for(;;) { //무한루프 //while(true)
		System.out.println(i+" 출력");
		i++;
	}



	진행순서: 1.초기식 -> 2.조건식 -> 3.수행될문장 -> 4.증감식 ->5.조건식 -> 6.true이면 다시 수행될 문장, false이면 종료
	1회전: 초기식 확인 후 조건식 확인, 조건식이 true면 문장 수행, 조건식이 false면 수행하지 않음
	2회전: 증감식 연산 후 조건식 확인, 조건식이 true면 문장 수행, 조건식이 false면 수행하지 않음
	* 2회전 이상부터는 모두 2회전과 동일하고 조건식이 false가 나올 때까지 문장 수행

	





- 중첩 반복문
	표현식
	for(초기값1; 조건식1; 증감식1) {
		수행될 문장1;
		for(초기값2; 조건식2; 증감식2) {
			수행될 문장2;
		}
		수행될 문장3;
	}

	for문에 진입하면 수행될 문장1을 먼저 수행하고 두 번재 for문에 진입하면
	조건식2가 false가 될 때까지 수행될 문장2를 수행 후 나오면
	수행될 문장3을 수행하고 조건식1로 돌아와 true면 다시 반복



		for(int i=0; i<10; i++) {
		System.out.println("## 외부 반복문 "+i);
			for(int j=0; j<10; j++) {
				System.out.println("내부 반복문 "+j);
			}
		}	
		
	 -. 구구단 출력하기(2~9단) - for문
		for(int i=2; i<10; i++) {
			for(int j=1; j<10; j++) {
				System.out.printf("%d * %d = %d\n", i,j,i*j);
			}
		}

	-. 구구단 출력하기(2~9단) - while문
		int j = 2;
		while(j<10) {			
			int i = 1;
			while(i<10) {
				System.out.printf("%d * %d = %-5d\n",j, i, j*i);
				i++;
			}
			j++;
		}